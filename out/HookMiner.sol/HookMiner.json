{"abi":[{"type":"function","name":"computeAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"salt","type":"uint256","internalType":"uint256"},{"name":"creationCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"hookAddress","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"find","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"flags","type":"uint160","internalType":"uint160"},{"name":"seed","type":"uint256","internalType":"uint256"},{"name":"creationCode","type":"bytes","internalType":"bytes"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"}],"bytecode":{"object":"0x61044f610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063013a236e14610043578063ab865118146100e4575b5f80fd5b6100c7610051366004610304565b8051602091820120604080517fff000000000000000000000000000000000000000000000000000000000000008185015260609590951b6bffffffffffffffffffffffff191660218601526035850193909352605580850191909152825180850390910181526075909301909152815191012090565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f76100f2366004610359565b610116565b604080516001600160a01b0390931683526020830191909152016100db565b5f805f80858560405160200161012d9291906103fd565b60408051601f198184030181529190529050865b620186a08110156101fa578151602080840191909120604080517fff00000000000000000000000000000000000000000000000000000000000000818501526bffffffffffffffffffffffff1960608f901b16602182015260358101859052605580820193909352815180820390930183526075019052805191012092506001600160a01b03891673ffc00000000000000000000000000000000000008416036101f2579193509091506102469050565b600101610141565b60405162461bcd60e51b815260206004820152601e60248201527f486f6f6b4d696e65723a20636f756c64206e6f742066696e642073616c740000604482015260640160405180910390fd5b9550959350505050565b6001600160a01b0381168114610264575f80fd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261028a575f80fd5b813567ffffffffffffffff808211156102a5576102a5610267565b604051601f8301601f19908116603f011681019082821181831017156102cd576102cd610267565b816040528381528660208588010111156102e5575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f60608486031215610316575f80fd5b833561032181610250565b925060208401359150604084013567ffffffffffffffff811115610343575f80fd5b61034f8682870161027b565b9150509250925092565b5f805f805f60a0868803121561036d575f80fd5b853561037881610250565b9450602086013561038881610250565b935060408601359250606086013567ffffffffffffffff808211156103ab575f80fd5b6103b789838a0161027b565b935060808801359150808211156103cc575f80fd5b506103d98882890161027b565b9150509295509295909350565b5f81518060208401855e5f93019283525090919050565b5f61041161040b83866103e6565b846103e6565b94935050505056fea2646970667358221220de0f75c147a91a578d5eba7f6d88fbf2a3f3a6ef823e0a5125ef8877c3f36f5164736f6c63430008190033","sourceMap":"269:2746:73:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;269:2746:73;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063013a236e14610043578063ab865118146100e4575b5f80fd5b6100c7610051366004610304565b8051602091820120604080517fff000000000000000000000000000000000000000000000000000000000000008185015260609590951b6bffffffffffffffffffffffff191660218601526035850193909352605580850191909152825180850390910181526075909301909152815191012090565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f76100f2366004610359565b610116565b604080516001600160a01b0390931683526020830191909152016100db565b5f805f80858560405160200161012d9291906103fd565b60408051601f198184030181529190529050865b620186a08110156101fa578151602080840191909120604080517fff00000000000000000000000000000000000000000000000000000000000000818501526bffffffffffffffffffffffff1960608f901b16602182015260358101859052605580820193909352815180820390930183526075019052805191012092506001600160a01b03891673ffc00000000000000000000000000000000000008416036101f2579193509091506102469050565b600101610141565b60405162461bcd60e51b815260206004820152601e60248201527f486f6f6b4d696e65723a20636f756c64206e6f742066696e642073616c740000604482015260640160405180910390fd5b9550959350505050565b6001600160a01b0381168114610264575f80fd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261028a575f80fd5b813567ffffffffffffffff808211156102a5576102a5610267565b604051601f8301601f19908116603f011681019082821181831017156102cd576102cd610267565b816040528381528660208588010111156102e5575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f60608486031215610316575f80fd5b833561032181610250565b925060208401359150604084013567ffffffffffffffff811115610343575f80fd5b61034f8682870161027b565b9150509250925092565b5f805f805f60a0868803121561036d575f80fd5b853561037881610250565b9450602086013561038881610250565b935060408601359250606086013567ffffffffffffffff808211156103ab575f80fd5b6103b789838a0161027b565b935060808801359150808211156103cc575f80fd5b506103d98882890161027b565b9150509295509295909350565b5f81518060208401855e5f93019283525090919050565b5f61041161040b83866103e6565b846103e6565b94935050505056fea2646970667358221220de0f75c147a91a578d5eba7f6d88fbf2a3f3a6ef823e0a5125ef8877c3f36f5164736f6c63430008190033","sourceMap":"269:2746:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2705:308;;;;;;:::i;:::-;2969:23;;;;;;;2922:71;;;2939:12;2922:71;;;3206:39:74;3282:2;3278:15;;;;-1:-1:-1;;3274:53:74;3261:11;;;3254:74;3344:12;;;3337:28;;;;3381:12;;;;3374:28;;;;2922:71:73;;;;;;;;;;3418:12:74;;;;2922:71:73;;;2912:82;;;;;;2705:308;;;;-1:-1:-1;;;;;1728:55:74;;;1710:74;;1698:2;1683:18;2705:308:73;;;;;;;;1501:735;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2885:55:74;;;2867:74;;2972:2;2957:18;;2950:34;;;;2840:18;1501:735:73;2685:305:74;1501:735:73;1688:7;1697;1716:19;1745:33;1798:12;1812:15;1781:47;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1781:47:73;;;;;;;;;;-1:-1:-1;1854:4:73;1868:311;498:7;1879:4;:15;1868:311;;;2969:23;;;;;;;;;;2922:71;;;2939:12;2922:71;;;3206:39:74;-1:-1:-1;;3282:2:74;3278:15;;;3274:53;3261:11;;;3254:74;3344:12;;;3337:28;;;3381:12;;;;3374:28;;;;2922:71:73;;;;;;;;;;3418:12:74;;2922:71:73;;2912:82;;;;;1911:66;-1:-1:-1;;;;;;1995:41:73;;378:12;1995:32;;:41;1991:115;;2064:11;;-1:-1:-1;2085:4:73;;-1:-1:-1;2056:35:73;;-1:-1:-1;2056:35:73;1991:115;2148:6;;1868:311;;;2189:40;;-1:-1:-1;;;2189:40:73;;4125:2:74;2189:40:73;;;4107:21:74;4164:2;4144:18;;;4137:30;4203:32;4183:18;;;4176:60;4253:18;;2189:40:73;;;;;;;1501:735;;;;;;;;;:::o;14:154:74:-;-1:-1:-1;;;;;93:5:74;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:127::-;234:10;229:3;225:20;222:1;215:31;265:4;262:1;255:15;289:4;286:1;279:15;305:718;347:5;400:3;393:4;385:6;381:17;377:27;367:55;;418:1;415;408:12;367:55;454:6;441:20;480:18;517:2;513;510:10;507:36;;;523:18;;:::i;:::-;598:2;592:9;566:2;652:13;;-1:-1:-1;;648:22:74;;;672:2;644:31;640:40;628:53;;;696:18;;;716:22;;;693:46;690:72;;;742:18;;:::i;:::-;782:10;778:2;771:22;817:2;809:6;802:18;863:3;856:4;851:2;843:6;839:15;835:26;832:35;829:55;;;880:1;877;870:12;829:55;944:2;937:4;929:6;925:17;918:4;910:6;906:17;893:54;991:1;984:4;979:2;971:6;967:15;963:26;956:37;1011:6;1002:15;;;;;;305:718;;;;:::o;1028:523::-;1114:6;1122;1130;1183:2;1171:9;1162:7;1158:23;1154:32;1151:52;;;1199:1;1196;1189:12;1151:52;1238:9;1225:23;1257:31;1282:5;1257:31;:::i;:::-;1307:5;-1:-1:-1;1359:2:74;1344:18;;1331:32;;-1:-1:-1;1414:2:74;1399:18;;1386:32;1441:18;1430:30;;1427:50;;;1473:1;1470;1463:12;1427:50;1496:49;1537:7;1528:6;1517:9;1513:22;1496:49;:::i;:::-;1486:59;;;1028:523;;;;;:::o;1795:885::-;1908:6;1916;1924;1932;1940;1993:3;1981:9;1972:7;1968:23;1964:33;1961:53;;;2010:1;2007;2000:12;1961:53;2049:9;2036:23;2068:31;2093:5;2068:31;:::i;:::-;2118:5;-1:-1:-1;2175:2:74;2160:18;;2147:32;2188:33;2147:32;2188:33;:::i;:::-;2240:7;-1:-1:-1;2294:2:74;2279:18;;2266:32;;-1:-1:-1;2349:2:74;2334:18;;2321:32;2372:18;2402:14;;;2399:34;;;2429:1;2426;2419:12;2399:34;2452:49;2493:7;2484:6;2473:9;2469:22;2452:49;:::i;:::-;2442:59;;2554:3;2543:9;2539:19;2526:33;2510:49;;2584:2;2574:8;2571:16;2568:36;;;2600:1;2597;2590:12;2568:36;;2623:51;2666:7;2655:8;2644:9;2640:24;2623:51;:::i;:::-;2613:61;;;1795:885;;;;;;;;:::o;3441:211::-;3482:3;3520:5;3514:12;3564:6;3557:4;3550:5;3546:16;3541:3;3535:36;3626:1;3590:16;;3615:13;;;-1:-1:-1;3590:16:74;;3441:211;-1:-1:-1;3441:211:74:o;3657:261::-;3832:3;3857:55;3882:29;3907:3;3899:6;3882:29;:::i;:::-;3874:6;3857:55;:::i;:::-;3850:62;3657:261;-1:-1:-1;;;;3657:261:74:o","linkReferences":{}},"methodIdentifiers":{"computeAddress(address,uint256,bytes)":"013a236e","find(address,uint160,uint256,bytes,bytes)":"ab865118"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"}],\"name\":\"computeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"flags\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"find\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This library is intended for `forge test` environments. There may be gotchas when using salts in `forge script` or `forge create`\",\"kind\":\"dev\",\"methods\":{\"computeAddress(address,uint256,bytes)\":{\"params\":{\"creationCode\":\"The creation code of a hook contract\",\"deployer\":\"The address that will deploy the hook     In `forge test`, this will be the test contract `address(this)` or the pranking address     In `forge script`, this should be `0x4e59b44847b379578588920cA78FbF26c0B4956C` (CREATE2 Deployer Proxy)\",\"salt\":\"The salt used to deploy the hook\"}},\"find(address,uint160,uint256,bytes,bytes)\":{\"params\":{\"constructorArgs\":\"The encoded constructor arguments of a hook contract. Example: `abi.encode(address(manager))`\",\"creationCode\":\"The creation code of a hook contract. Example: `type(Counter).creationCode`\",\"deployer\":\"The address that will deploy the hook.     In `forge test`, this will be the test contract `address(this)` or the pranking address     In `forge script`, this should be `0x4e59b44847b379578588920cA78FbF26c0B4956C` (CREATE2 Deployer Proxy)\",\"flags\":\"The desired flags for the hook address\",\"seed\":\"Use 0 for as a default. An optional starting salt when linearly searching for a salt     Useful for finding salts for multiple hooks with the same flags\"},\"returns\":{\"_0\":\"hookAddress salt and corresponding address that was found     The salt can be used in `new Hook{salt: salt}(<constructor arguments>)`\"}}},\"title\":\"HookMiner - a library for mining hook addresses\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeAddress(address,uint256,bytes)\":{\"notice\":\"Precompute a contract address deployed via CREATE2\"},\"find(address,uint160,uint256,bytes,bytes)\":{\"notice\":\"Find a salt that produces a hook address with the desired `flags`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/HookMiner.sol\":\"HookMiner\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/v4-periphery/lib/solmate/src/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/contracts/\"]},\"sources\":{\"test/utils/HookMiner.sol\":{\"keccak256\":\"0x75ffb8a878d46081eae5b2956c2316bc2ea2c36ac9a52a44192c7e6a4815339a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b870662bb5bdcc3a8fab37cbec7087a2e6cdaabcdbe0ed1f8536d1072def7164\",\"dweb:/ipfs/QmU1a5o13GX39t3M1RtwqU1gA48Ta7EKrYrZfzGXryPGVq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"creationCode","type":"bytes"}],"stateMutability":"pure","type":"function","name":"computeAddress","outputs":[{"internalType":"address","name":"hookAddress","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint160","name":"flags","type":"uint160"},{"internalType":"uint256","name":"seed","type":"uint256"},{"internalType":"bytes","name":"creationCode","type":"bytes"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"pure","type":"function","name":"find","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"computeAddress(address,uint256,bytes)":{"params":{"creationCode":"The creation code of a hook contract","deployer":"The address that will deploy the hook     In `forge test`, this will be the test contract `address(this)` or the pranking address     In `forge script`, this should be `0x4e59b44847b379578588920cA78FbF26c0B4956C` (CREATE2 Deployer Proxy)","salt":"The salt used to deploy the hook"}},"find(address,uint160,uint256,bytes,bytes)":{"params":{"constructorArgs":"The encoded constructor arguments of a hook contract. Example: `abi.encode(address(manager))`","creationCode":"The creation code of a hook contract. Example: `type(Counter).creationCode`","deployer":"The address that will deploy the hook.     In `forge test`, this will be the test contract `address(this)` or the pranking address     In `forge script`, this should be `0x4e59b44847b379578588920cA78FbF26c0B4956C` (CREATE2 Deployer Proxy)","flags":"The desired flags for the hook address","seed":"Use 0 for as a default. An optional starting salt when linearly searching for a salt     Useful for finding salts for multiple hooks with the same flags"},"returns":{"_0":"hookAddress salt and corresponding address that was found     The salt can be used in `new Hook{salt: salt}(<constructor arguments>)`"}}},"version":1},"userdoc":{"kind":"user","methods":{"computeAddress(address,uint256,bytes)":{"notice":"Precompute a contract address deployed via CREATE2"},"find(address,uint160,uint256,bytes,bytes)":{"notice":"Find a salt that produces a hook address with the desired `flags`"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/v4-core/lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/v4-periphery/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/","openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/","solmate/=lib/v4-periphery/lib/solmate/src/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/contracts/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/utils/HookMiner.sol":"HookMiner"},"evmVersion":"cancun","libraries":{}},"sources":{"test/utils/HookMiner.sol":{"keccak256":"0x75ffb8a878d46081eae5b2956c2316bc2ea2c36ac9a52a44192c7e6a4815339a","urls":["bzz-raw://b870662bb5bdcc3a8fab37cbec7087a2e6cdaabcdbe0ed1f8536d1072def7164","dweb:/ipfs/QmU1a5o13GX39t3M1RtwqU1gA48Ta7EKrYrZfzGXryPGVq"],"license":"GPL-2.0-or-later"}},"version":1},"id":73}